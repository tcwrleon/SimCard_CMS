<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
            http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool-3.1.xsd
            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">
	
	<!--1  使用Spring组件扫描的方式来实现自动注入bean -->
		
	<context:component-scan base-package="com.sunyard.action"/>
	<context:component-scan base-package="com.sunyard.service"/>
	<context:component-scan base-package="com.sunyard.log"/>
	<context:component-scan base-package="com.sunyard.util"/>
	<context:component-scan base-package="com.sunyard.security"/>
		
	<!--2  数据库连接 -->
	<!--2.1 读取资源文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!--2.2 配置数据源 -->
	<!--主要的dataSource-->
	<bean id="dataSourceMain" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${mysql.driverClassName}</value>
		</property>
		<property name="url">
			<value>${mysql.url}</value>
		</property>
		<property name="username">
			<value>${mysql.username}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>

		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="logAbandoned" value="${jdbc.logAbandoned}"/>
		<property name="validationQuery" value="select 1"/>
		<property name="testWhileIdle" value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="3600000"/>
		<property name="minEvictableIdleTimeMillis" value="18000000"/>
		<property name="testOnBorrow" value="true"/>
	</bean>

	<!--猫池的dataSource-->
	<bean id="dataSourceCatPool" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${access.driverClassName}"/>
		<property name="url" value="${access.url}"/>
		<property name="username">
			<value>${access.username}</value>
		</property>
		<property name="password">
			<value>${access.password}</value>
		</property>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle"  value="${jdbc.maxIdle}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
	</bean>

	<!--统一的dataSource-->
	<bean id="dynamicDataSource" class="com.sunyard.datasource.DynamicDataSource" >
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!--通过不同的key决定用哪个dataSource-->
				<entry value-ref="dataSourceMain" key="dataSourceMain"></entry>
				<entry value-ref="dataSourceCatPool" key="dataSourceCatPool"></entry>
			</map>
		</property>
		<!--设置默认的dataSource-->
		<property name="defaultTargetDataSource" ref="dataSourceMain">
		</property>
	</bean>
	
	<!--3  加入mybatis持久层框架 -->
	<bean id="pagePlugin" class="com.sunyard.pulgin.PagePlugin">
		<property name="properties">
			<props>
				<!--<prop key="dialect">oracle</prop>-->
				<prop key="dialect">mysql</prop>
			</props>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sunyard.dao,com.sunyard.quartz.dao" />
	</bean>

	<!--4  事务配置仅在服务层使用 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!--proxy-target-class="true"为cglib的动态代理 false为JDK的动态代理   -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!--5 ehcache缓存使用 -->
    <!-- cacheManager工厂类  -->
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
        p:configLocation="classpath:ehcache.xml" p:shared="true"/> 
    
    <!-- 声明cacheManager -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" 
        p:cacheManager-ref="cacheManagerFactory" /> 
    
    <!-- 加入spring注解式缓存支持 -->
	<cache:annotation-driven  cache-manager="cacheManager" /> 
    <bean id="runLogService" class="com.sunyard.service.system.impl.RunLogServiceImpl"></bean>

   <!--6 Spring Security异常信息本地化 -->
   <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
   </bean>
   
</beans>  
